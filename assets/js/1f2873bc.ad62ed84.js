(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[627],{4107:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return f}});var i=n(4387);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),f=a,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||o;return n?i.createElement(m,r(r({ref:t},c),{},{components:n})):i.createElement(m,r({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var p=2;p<o;p++)r[p]=n[p];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7675:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var i=n(129),a=n(7489),o=(n(4387),n(4107)),r=["components"],s={id:"state-is-king",title:"State is King!",sidebar_label:"State is King"},l={unversionedId:"tutorials/react/state-is-king",id:"tutorials/react/state-is-king",isDocsHomePage:!1,title:"State is King!",description:"State of the app when it has just started up (aka",source:"@site/docs/tutorials/react/state-is-king.md",sourceDirName:"tutorials/react",slug:"/tutorials/react/state-is-king",permalink:"/engine/docs/tutorials/react/state-is-king",editUrl:"https://github.com/code11/engine/edit/master/docs/docs/tutorials/react/state-is-king.md",version:"current",sidebar_label:"State is King",frontMatter:{id:"state-is-king",title:"State is King!",sidebar_label:"State is King"},sidebar:"docs",previous:{title:"Static UI",permalink:"/engine/docs/tutorials/react/static-ui"},next:{title:"Accessing State in Components",permalink:"/engine/docs/tutorials/react/accessing-state-in-components"}},p=[],c={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,r);return(0,o.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/concepts/state"},"State")," of the app when it has just started up (aka\ninitial state) can be given to ",(0,o.kt)("a",{parentName:"p",href:"/docs/implementations/react"},"Engine")," when it is\ninstantiated:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},'const app = engine({\n+ state: {\n+   initial: { }\n+ },\n  view: {\n    element: <App />,\n    root: "#root"\n  }\n});\n')),(0,o.kt)("p",null,"Usually there would be a unique ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," in the database which can uniquely identify\na todo. While building only the UI, such identifier isn't available. So the app\nwill add a fake ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," into every todo item it creates."),(0,o.kt)("p",null,"Types are immensely helpful in modeling domain objects. Create a ",(0,o.kt)("inlineCode",{parentName:"p"},"src/types.ts"),"\nfile, and add how the ",(0,o.kt)("inlineCode",{parentName:"p"},"TodoItem")," is going to be shaped like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'export enum TodoStatuses {\n  pending = "pending",\n  done = "done",\n}\n\nexport interface TodoItem {\n  id: string;\n  title: string;\n  status: TodoStatuses;\n}\n')),(0,o.kt)("p",null,"Notice that for the status of ",(0,o.kt)("inlineCode",{parentName:"p"},"TodoItem"),"s, an enum of statuses is used instead\nof a boolean flag (e.g ",(0,o.kt)("inlineCode",{parentName:"p"},"isDone")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"isPending"),"). It is an ",(0,o.kt)("a",{parentName:"p",href:"/docs/best-practices#prefer-explicit-types-over-boolean-flags"},"Engine best\npractice")," to\nprefer explicit types over boolean flags."),(0,o.kt)("p",null,"Knowledge of the shape of ",(0,o.kt)("inlineCode",{parentName:"p"},"TodoItem"),"s allows adding some initial todos the\napplication state. In ",(0,o.kt)("inlineCode",{parentName:"p"},"src/index.tsx")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},"const app = engine({\n  state: {\n-   initial: { }\n+   initial: {\n+     todosById: {\n+       todo1: { id: 'todo1', title: 'Add initial state to engine', isDone: false },\n+       todo2: { id: 'todo2', title: 'Use initial state in components', isDone: false }\n+     },\n+     visibleTodoIds: ['todo1', 'todo2']\n+   }\n+ },\n  view: {\n    element: <App />,\n    root: \"#root\"\n  }\n});\n")),(0,o.kt)("p",null,"Todo items are kept in very explicitly named ",(0,o.kt)("inlineCode",{parentName:"p"},"todosById")," key, and their ",(0,o.kt)("inlineCode",{parentName:"p"},"id"),"s\nare also added in a ",(0,o.kt)("inlineCode",{parentName:"p"},"visibleTodoIds")," array. This a deliberate choice with ",(0,o.kt)("a",{parentName:"p",href:"/docs/concepts/state#shape-of-state"},"good\nreasons"),". One of the app components (Todo listing)\nhappen to show a list of todo items. These shown todos might (and will) end up\nbeing different from our ",(0,o.kt)("inlineCode",{parentName:"p"},"todosById"),". Keeping them in their own path in state\nallows keeping a normalized state. It is crucial for maintainability that a\nsingle source of truth for data is maintained."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"todosById")," will often be referred to in the app. Create a type alias for it is\nhelpful to not have to repeat it over and over again. In ",(0,o.kt)("inlineCode",{parentName:"p"},"src/types.ts"),", add:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export type TodosById = { [id: string]: TodoItem };\n")),(0,o.kt)("p",null,"It's time to show the ",(0,o.kt)("inlineCode",{parentName:"p"},"TodoItem"),"s from state in our component."))}d.isMDXComponent=!0},129:function(e,t,n){"use strict";function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}n.d(t,{Z:function(){return i}})},7489:function(e,t,n){"use strict";function i(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}n.d(t,{Z:function(){return i}})}}]);