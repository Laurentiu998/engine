"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[643],{6164:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(3289);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(g,p(p({ref:t},c),{},{components:n})):a.createElement(g,p({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,p[1]=o;for(var s=2;s<i;s++)p[s]=n[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2115:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return s},default:function(){return u}});var a=n(753),r=n(1242),i=(n(3289),n(6164)),p=["components"],o={id:"setup",title:"Setup",sidebar_label:"Setup"},l={unversionedId:"tutorials/react/setup",id:"tutorials/react/setup",isDocsHomePage:!1,title:"Setup",description:"Quick Start",source:"@site/docs/tutorials/react/setup.md",sourceDirName:"tutorials/react",slug:"/tutorials/react/setup",permalink:"/engine/docs/tutorials/react/setup",editUrl:"https://github.com/code11/engine/edit/master/docs/docs/tutorials/react/setup.md",version:"current",sidebar_label:"Setup",frontMatter:{id:"setup",title:"Setup",sidebar_label:"Setup"},sidebar:"docs",previous:{title:"React",permalink:"/engine/docs/implementations/react"},next:{title:"Static UI",permalink:"/engine/docs/tutorials/react/static-ui"}},s=[{value:"Quick Start",id:"quick-start",children:[]},{value:"Building a React Engine App",id:"building-a-react-engine-app",children:[]},{value:"Setup",id:"setup",children:[{value:"Create an Engine instance",id:"create-an-engine-instance",children:[]},{value:"Add styles",id:"add-styles",children:[]},{value:"Starter Markup",id:"starter-markup",children:[]},{value:"Cleanup",id:"cleanup",children:[]}]}],c={toc:s};function u(e){var t=e.components,n=(0,r.Z)(e,p);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"quick-start"},"Quick Start"),(0,i.kt)("p",null,"Although Engine itself is platform neutral, Engine's reactive features really\nshine when building a React application."),(0,i.kt)("h2",{id:"building-a-react-engine-app"},"Building a React Engine App"),(0,i.kt)("p",null,"This tutorial builds a TodoMVC app following the specs defined at\n",(0,i.kt)("a",{parentName:"p",href:"http://todomvc.com/"},"todomvc.com"),"."),(0,i.kt)("h2",{id:"setup"},"Setup"),(0,i.kt)("p",null,"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"@c11/engine.cli")," to create an engine starter app."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npx @c11/engine.cli create engine-todo-app\n")),(0,i.kt)("p",null,"Engine itself is written in Typescript, and recommends using it for creating\nReact applications using Engine."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"yarn start")," can be used to start the app on\n",(0,i.kt)("a",{parentName:"p",href:"http://localhost:8080"},"localhost:8080"),"."),(0,i.kt)("h3",{id:"create-an-engine-instance"},"Create an Engine instance"),(0,i.kt)("p",null,"First step for building an Engine app is creating an ",(0,i.kt)("inlineCode",{parentName:"p"},"Engine")," instance, and let\nit take control of the app. In the ",(0,i.kt)("inlineCode",{parentName:"p"},"src/index.tsx")," file let's add some todos:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},' const app = engine({\n   state: {\n-    name: "John Doe",\n-    item: {\n-      a: "this is a",\n-      b: "this is b",\n-    },\n+   initial: { }\n   },\n   use: [\n     render(<App />, "#app", {\n')),(0,i.kt)("p",null,"Engine takes care of mounting the app to DOM instead of having ",(0,i.kt)("inlineCode",{parentName:"p"},"react-dom"),"."),(0,i.kt)("p",null,"This creates a valid, running Engine app."),(0,i.kt)("p",null,"Up next: some chores to set the stage for building the TodoMVC app:"),(0,i.kt)("h3",{id:"add-styles"},"Add styles"),(0,i.kt)("p",null,"To keep the focus on building the React side of things, install\n",(0,i.kt)("inlineCode",{parentName:"p"},"todomvc-app-css")," npm package with ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn add todomvc-app-css"),". Update\n",(0,i.kt)("inlineCode",{parentName:"p"},"src/App.tsx")," file to use it:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},'+ import "todomvc-app-css/index.css";\n')),(0,i.kt)("p",null,"This step:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Imported CSS from ",(0,i.kt)("inlineCode",{parentName:"li"},"todomvc-app-css"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note"),": You might need to install ",(0,i.kt)("inlineCode",{parentName:"p"},"postcss")," v.8 for ",(0,i.kt)("inlineCode",{parentName:"p"},"todomvc-app-css")," to work."),(0,i.kt)("h3",{id:"starter-markup"},"Starter Markup"),(0,i.kt)("p",null,"To conclude this chapter, update ",(0,i.kt)("inlineCode",{parentName:"p"},"src/App.tsx")," and add some markup to make the\napp feel more like the TodoMVC. Replace contents of ",(0,i.kt)("inlineCode",{parentName:"p"},"src/App.tsx")," with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'const App = () => (\n  <section className="todoapp">\n    <div>\n      <header className="header">\n        <h1>todos</h1>\n      </header>\n    </div>\n  </section>\n);\n\nexport default App;\n')),(0,i.kt)("p",null,"CSS is provided by ",(0,i.kt)("inlineCode",{parentName:"p"},"todomvc-app-css")," npm package, which mandates using correct\nCSS classes to keep the app looking right."),(0,i.kt)("h3",{id:"cleanup"},"Cleanup"),(0,i.kt)("p",null,"The engine CLI uses a starter template. Go on and remove ",(0,i.kt)("inlineCode",{parentName:"p"},"greeting.ts"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"greeting.spec.ts")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Component.tsx")," once you updated ",(0,i.kt)("inlineCode",{parentName:"p"},"App.tsx"),'. Also remove "Foo bar baz" line above the app entry point ',(0,i.kt)("inlineCode",{parentName:"p"},"#app")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"public/index.html"),"."))}u.isMDXComponent=!0}}]);